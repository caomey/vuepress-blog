(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{478:function(t,s,a){"use strict";a.r(s);var n=a(59),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"flex弹性盒子布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex弹性盒子布局"}},[t._v("#")]),t._v(" flex弹性盒子布局")]),t._v(" "),a("h2",{attrs:{id:"二、基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[t._v("#")]),t._v(" 二、基本概念")]),t._v(" "),a("p",[t._v("采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190405163746672.png",alt:""}})]),t._v(" "),a("p",[t._v("容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。")]),t._v(" "),a("h2",{attrs:{id:"三、相关属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、相关属性"}},[t._v("#")]),t._v(" 三、相关属性")]),t._v(" "),a("p",[t._v("**1、 flex-direction属性：**主轴的排列方向")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ----主轴为水平方向，起点在左端。\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row-reverse // ----主轴为水平方向，起点在右端。\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column // ----主轴为垂直方向，起点在上沿。\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column-reverse // ----主轴为垂直方向，起点在下沿。\n")])])]),a("h3",{attrs:{id:"_2、flex-wrap属性：定义元素的换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、flex-wrap属性：定义元素的换行"}},[t._v("#")]),t._v(" 2、flex-wrap属性：定义元素的换行")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ----表示不换行，平分父元素\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap // ----表示换行布局\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" wrap-reverse // ----换行布局，但首行在下方\n")])])]),a("h3",{attrs:{id:"_3、flex-flow属性：属于以上两个属性的缩写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、flex-flow属性：属于以上两个属性的缩写"}},[t._v("#")]),t._v(" 3、flex-flow属性：属于以上两个属性的缩写")]),t._v(" "),a("p",[t._v("flex-flow 相当于 flex-direction 和 flex-wrap两个属性\n前面记得加上：display:flex")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("flex-flow：row nowrap //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("h3",{attrs:{id:"_4、justify-content属性：主轴方向上的对齐方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、justify-content属性：主轴方向上的对齐方式"}},[t._v("#")]),t._v(" 4、justify-content属性：主轴方向上的对齐方式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ----靠左对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-end // ----靠右对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center // ----居中排列\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" space-between // ----两端对齐，项目之间的间隔都相等\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" space-around // ----每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍\n")])])]),a("h3",{attrs:{id:"_5、align-items属性：交叉轴方向上的对齐方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、align-items属性：交叉轴方向上的对齐方式"}},[t._v("#")]),t._v(" 5、align-items属性：交叉轴方向上的对齐方式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("----交叉轴的起点对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-end //----交叉轴的终点对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center //----交叉轴的中点对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" baseline //----项目的第一行文字的基线对齐\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch //----如果项目未设置高度或设为auto，将占满整个容器的高度\n")])])]),a("h3",{attrs:{id:"_6、align-content属性：多根轴线的对齐方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、align-content属性：多根轴线的对齐方式"}},[t._v("#")]),t._v(" 6、align-content属性：多根轴线的对齐方式")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stretch //"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ----轴线占满整个交叉轴\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start // ----与交叉轴的起点对齐\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-end // ----与交叉轴的终点对齐\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center // ----与交叉轴的中点对齐\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" space-between // ----与交叉轴两端对齐，轴线之间的间隔平均分布\n "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" space-around // ----每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍\n\n")])])]),a("h2",{attrs:{id:"四、项目属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、项目属性"}},[t._v("#")]),t._v(" 四、项目属性")]),t._v(" "),a("p",[t._v("1、order属性：order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),t._v(" "),a("p",[t._v("2、flex-grow属性：flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),t._v(" "),a("p",[t._v("3、flex-shrink属性：flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),t._v(" "),a("p",[t._v("4、flex-basis属性：flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),t._v(" "),a("p",[t._v("5、flex属性：flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 1 auto\n")])])]),a("p",[t._v("6、align-self属性：align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),t._v(" "),a("h2",{attrs:{id:"问题总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题总结"}},[t._v("#")]),t._v(" 问题总结")]),t._v(" "),a("p",[t._v("flex-grow  子元素会自动撑开剩余空间")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1//\n")])])]),a("h2",{attrs:{id:"calc计算属性配合flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#calc计算属性配合flex"}},[t._v("#")]),t._v(" calc计算属性配合flex")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100% / 3 - 1rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("//\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("水平准确分布n个盒子， 并且留有缝隙")]),t._v(" "),a("p",[t._v("注意：盒模型为border-box，避免padding和border值影响宽度")]),t._v(" "),a("ol",[a("li",[t._v("计算宽度calc(100% / n- 1rem)后，用 justify-content: space-evenly // 撑开剩余空间，缝隙尺寸为 n*1rem / (n+1)，但是间隙是均匀的")]),t._v(" "),a("li",[t._v("计算宽度calc(100% / n- 1rem)后，用 justify-content:center，间隙用margin: 0 0.5rem  这个0.5rem刚好是1rem的一半， 和 设置justify-content: space-around 的结果一样")]),t._v(" "),a("li",[t._v("考虑到多出子元素布局从左到右，使用justify-content:flex-start， 利用calc准确计算出width，margin值为减去值的一半，保证最后width总和是100%，只要父盒子居中，就能保证整体居中了")])]),t._v(" "),a("p",[a("strong",[t._v("进阶：")])]),t._v(" "),a("p",[a("strong",[t._v("问题")]),t._v("：使用flex 的  justify-content:space-evenly（space-between) 会使最后一行元素不足时，中间出现空白，使用默认的 justify-content：felx-start,但是就不能响应式控制间隙")]),t._v(" "),a("p",[a("strong",[t._v("解决1")]),t._v("：自己控制间隙，让弹性元素平均分布，按百分比计算宽度,为了是总宽度100%，要去减margin值（因为盒模型用的border-box，不需要计算padding值），但是还是觉得麻烦")]),t._v(" "),a("p",[a("strong",[t._v("解决2")]),t._v("：justify-content:flex-start + 弹性元素套盒子")]),t._v(" "),a("p",[t._v("给弹性元素套个父盒子， 让父盒子平均分布，间隙由子盒子的margin值控制，这样就解决了justify-content:flex-start不能控制间隙的问题，有解决了宽度响应式的问题")]),t._v(" "),a("div",{staticClass:"language-less extra-class"},[a("pre",{pre:!0,attrs:{class:"language-less"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整体 justify-content:flex-start ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".wrapper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("row wrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("flex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父盒子分摊100%的宽度")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 768px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 768px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@media "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min-width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子盒子控制间隙")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".son")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"css-高度随宽度比例变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-高度随宽度比例变化"}},[t._v("#")]),t._v(" css 高度随宽度比例变化")]),t._v(" "),a("p",[t._v("一个元素的 padding，如果值是一个百分比，那这个百分比是相对于其父元素的宽度而言的，padding-bottom 也是如此。")]),t._v(" "),a("p",[t._v("使用 padding-bottom 来代替 height 来实现高度与宽度成比例的效果，将 padding-bottom设置为想要实现的 height 的值。同时将")]),t._v(" "),a("p",[t._v("其 height 设置为 0 以使元素的“高度”等于 padding-bottom 的值，从而实现需要的效果")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".childbox")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%//\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%//\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0//\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #888888//\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"flex是flex-grow、flex-shrink-、flex-basis缩写组合。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex是flex-grow、flex-shrink-、flex-basis缩写组合。"}},[t._v("#")]),t._v(" flex是flex-grow、flex-shrink 、flex-basis缩写组合。")]),t._v(" "),a("blockquote",[a("p",[t._v("建议使用 flex 面不要单独使用 flex-grow / flew-shrink / flex-basis 。")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1 0 100px\n // 表示尺寸可以变大 不进行缩小 基本尺寸为100px\n")])])]),a("p",[t._v("flex：1，表示子元素会变大占据弹性父盒子的剩余空间，但是父盒子必须指定宽度或高度")]),t._v(" "),a("h2",{attrs:{id:"自己的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自己的理解"}},[t._v("#")]),t._v(" 自己的理解")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("只要标签加了"),a("code",[t._v("display：flex")]),t._v("这个属性，那么这个标签就是一个弹性盒子，而且默认带有一个"),a("code",[t._v("flex-direction：row")]),t._v("的属性（这个容易忽略）， 为了不混淆，最好"),a("code",[t._v("display：flex")]),t._v("， "),a("code",[t._v("flex-direction：row")]),t._v("同时写")])]),t._v(" "),a("li",[a("p",[t._v("单个盒子没有子盒子也可以设置为弹性盒子，用弹性盒子的属性来调整定位")])]),t._v(" "),a("li",[a("p",[t._v("弹性盒子的大小受子盒子的大小影响")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);