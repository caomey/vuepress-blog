(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{541:function(t,e,a){"use strict";a.r(e);var s=a(59),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),a("p",[t._v("在vue中，v-bind 只能实现数据的单向绑定，从 M （model）自动绑定到 V（view）， 无法实现数据的双向绑定，因此如果想要实现数据的双向绑定，可以使用  v-model 指令，实现表单元素和 Model 中数据的双向数据绑定，\n"),a("strong",[t._v("注意： v-model 只能运用在 表单元素中")])]),t._v(" "),a("blockquote",[a("p",[t._v("其实本质上，"),a("code",[t._v("v-model")]),t._v("是"),a("code",[t._v("v-bind")]),t._v("以及"),a("code",[t._v("v-on")]),t._v("配合使用的语法糖，举个例子：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("model"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 就是相当于: ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v(" @input"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value= $event.target.value"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("将"),a("code",[t._v("v-model")]),t._v("运用在自定义组件中实现值的双向绑定，这只不过是简化了单向数据流的操作，比如不用注册接收emit发射出来的事件函数再去改变值，减少了代码量。但是我觉得提高了维护成本，可能在例如表单组件中可以较好的运用这个特性以外，我还是宁愿麻烦一点走个完整的单项数据流，如果状态比较多就用"),a("code",[t._v("vuex")]),t._v("，这样可能更加直观，更好维护")])])}),[],!1,null,null,null);e.default=r.exports}}]);